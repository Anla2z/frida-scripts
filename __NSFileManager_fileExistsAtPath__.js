/*
 * Auto-generated by Frida. Please modify to match the signature of -[NSFileManager fileExistsAtPath:].
 * This stub is currently auto-generated from manpages when available.
 *
 * For full API reference, see: http://www.frida.re/docs/javascript-api/
 */

{
    /**
     * Called synchronously when about to call -[NSFileManager fileExistsAtPath:].
     *
     * @this {object} - Object allowing you to store state for use in onLeave.
     * @param {function} log - Call this function with a string to be presented to the user.
     * @param {array} args - Function arguments represented as an array of NativePointer objects.
     * For example use Memory.readUtf8String(args[0]) if the first argument is a pointer to a C string encoded as UTF-8.
     * It is also possible to modify arguments by assigning a NativePointer object to an element of this array.
     * @param {object} state - Object allowing you to keep state across function calls.
     * Only one JavaScript function will execute at a time, so do not worry about race-conditions.
     * However, do not use this to store function arguments across onEnter/onLeave, but instead
     * use "this" which is an object for keeping state local to an invocation.
     */

    onEnter: function (log, args, state) {
        var $this = ObjC.Object(args[0]); // NSFileManager
        var param1 = ObjC.Object(args[2]); // NSString
        log("-[NSFileManager fileExistsAtPath:" + param1 + " ]");
        
        var jailbreakPaths = [
            "/Applications/Cydia.app",
            "/Applications/blackra1n.app",
            "/Applications/FakeCarrier.app",
            "/Applications/Icy.app",
            "/Applications/IntelliScreen.app",
            "/Applications/MxTube.app",
            "/Applications/RockApp.app",
            "/Applications/SBSetttings.app",
            "/Applications/WinterBoard.app",
            "/usr/sbinsshd",
            "/private/var/tmp/cydia.log",
            "/usr/binsshd",
            "/usr/libexec/sftp-server",
            "//Systetem/Library/LaunchDaemons/com.ikey.bbot.plist",
            "//System/Library/LaunchDaemons/com.saurik.Cy@dia.Startup.plist",
            "//Library/MobileSubstrate/MobileSubstrate.dylib",
            "//var/log/syslog",
            "//bin/bash",
            "//bin/sh",
            "//etc/ssh/sshd_config",
            "//usr/libexec/ssh-keysign"
        ];

        this.jailbreakCall = false;
        var i = jailbreakPaths.length;
        while (i--) {
            if (jailbreakPaths[i] == param1) {
                this.jailbreakCall = true;
            }
        }

    },

    /**
     * Called synchronously when about to return from -[NSFileManager fileExistsAtPath:].
     *
     * See onEnter for details.
     *
     * @this {object} - Object allowing you to access state stored in onEnter.
     * @param {function} log - Call this function with a string to be presented to the user.
     * @param {NativePointer} retval - Return value represented as a NativePointer object.
     * @param {object} state - Object allowing you to keep state across function calls.
     */
    onLeave: function (log, retval, state) {
        if(this.jailbreakCall) {
            retval.replace(0x0);
            log("JAILBREAK CALL DETECTED AND HACKED!");
        }
    }
}
